# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2025-02-26 04:05
from __future__ import unicode_literals

import ckeditor.fields
import disturbance.components.approvals.models
import disturbance.components.proposals.models
from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import smart_selects.db_fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('disturbance', '0018_auto_20250226_1122'),
    ]

    operations = [
        migrations.CreateModel(
            name='MapColumn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('option_for_internal', models.BooleanField(default=True)),
                ('option_for_external', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'map column',
            },
        ),
        migrations.CreateModel(
            name='MapLayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(blank=True, max_length=100, null=True)),
                ('layer_name', models.CharField(blank=True, max_length=200, null=True)),
                ('option_for_internal', models.BooleanField(default=True)),
                ('option_for_external', models.BooleanField(default=True)),
                ('display_all_columns', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'map layer',
            },
        ),
        migrations.CreateModel(
            name='MasterlistQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('question', models.TextField()),
                ('answer_type', models.CharField(choices=[('text', 'Text'), ('radiobuttons', 'Radio button'), ('checkbox', 'Checkbox'), ('number', 'Number'), ('email', 'Email'), ('select', 'Select'), ('multi-select', 'Multi-select'), ('text_area', 'Text area'), ('label', 'Label'), ('declaration', 'Declaration'), ('file', 'File'), ('date', 'Date')], default='text', max_length=40, verbose_name='Answer Type')),
                ('help_text_url', models.BooleanField(default=False)),
                ('help_text_assessor_url', models.BooleanField(default=False)),
                ('help_text', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('help_text_assessor', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('property_cache', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
            ],
            options={
                'verbose_name': 'Schema Masterlist Question',
            },
        ),
        migrations.CreateModel(
            name='ProposalTypeSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_name', models.CharField(max_length=100)),
                ('section_label', models.CharField(max_length=100)),
                ('index', models.IntegerField(blank=True, default=0)),
                ('proposal_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='disturbance.ProposalType')),
            ],
            options={
                'verbose_name': 'Schema Proposal Type Section',
            },
        ),
        migrations.CreateModel(
            name='QuestionOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Schema Question Option',
            },
        ),
        migrations.CreateModel(
            name='RenewalDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(storage=django.core.files.storage.FileSystemStorage(base_url='/private-media/', location='private-media/'), upload_to=disturbance.components.approvals.models.update_approval_doc_filename)),
                ('can_delete', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SectionQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('isCopiedToPermit', 'isCopiedToPermit'), ('isRequired', 'isRequired'), ('canBeEditedByAssessor', 'canBeEditedByAssessor'), ('isRepeatable', 'isRepeatable'), ('isTitleColumnForDashboard', 'isTitleColumnForDashboard')], max_length=400, null=True)),
                ('order', models.PositiveIntegerField(default=1)),
                ('property_cache', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('parent_answer', smart_selects.db_fields.ChainedForeignKey(blank=True, chained_field='parent_question', chained_model_field='masterlistquestion', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='options', to='disturbance.QuestionOption')),
                ('parent_question', smart_selects.db_fields.ChainedForeignKey(blank=True, chained_field='section', chained_model_field='question_sections__section', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children_question', to='disturbance.MasterlistQuestion')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_sections', to='disturbance.MasterlistQuestion')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_questions', to='disturbance.ProposalTypeSection')),
            ],
            options={
                'verbose_name': 'Schema Section Question',
            },
        ),
        migrations.CreateModel(
            name='SpatialQueryQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Additional/Misc Data')),
                ('answer_mlq', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question_options', to='disturbance.QuestionOption')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='disturbance.CddpQuestionGroup')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='disturbance.MasterlistQuestion')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='TemporaryDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=255, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryDocumentCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AddField(
            model_name='applicationtype',
            name='domain_used',
            field=models.CharField(choices=[('das', 'DAS'), ('dummy', 'DUMMY')], default='das', max_length=40),
        ),
        migrations.AddField(
            model_name='applicationtype',
            name='searchable',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='approval',
            name='migrated',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='approval',
            name='proxy_applicant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disturbance_proxy_approvals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='organisationrequest',
            name='template_group',
            field=models.CharField(choices=[('das', 'DAS'), ('dummy', 'DUMMY')], default='das', max_length=100),
        ),
        migrations.AddField(
            model_name='proposal',
            name='fee_invoice_references',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, default='', max_length=50, null=True), default=disturbance.components.proposals.models.fee_invoice_references_default, null=True, size=None),
        ),
        migrations.AddField(
            model_name='proposal',
            name='migrated',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='proposal',
            name='reissued',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='proposal',
            name='weekly_reminder_sent_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='proposalrequirement',
            name='copied_for_renewal',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='proposalrequirement',
            name='require_due_date',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='proposalstandardrequirement',
            name='system',
            field=models.CharField(choices=[('disturbance', 'Disturbance')], default='disturbance', max_length=20, verbose_name='System'),
        ),
        migrations.AddField(
            model_name='temporarydocument',
            name='temp_document_collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='disturbance.TemporaryDocumentCollection'),
        ),
        migrations.AddField(
            model_name='renewaldocument',
            name='approval',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='renewal_documents', to='disturbance.Approval'),
        ),
        migrations.AddField(
            model_name='masterlistquestion',
            name='option',
            field=models.ManyToManyField(blank=True, to='disturbance.QuestionOption'),
        ),
        migrations.AddField(
            model_name='mapcolumn',
            name='map_layer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='disturbance.MapLayer'),
        ),
        migrations.AddField(
            model_name='spatialquerylayer',
            name='spatial_query_question',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='spatial_query_layers', to='disturbance.SpatialQueryQuestion'),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='spatialqueryquestion',
            unique_together=set([('question', 'answer_mlq')]),
        ),
    ]
