# Generated by Django 3.2.25 on 2025-10-13 09:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('disturbance', '0293_auto_20251013_1632'),
    ]

    operations = [
        # Wrap all auto-generated operations in SeparateDatabaseAndState.
        migrations.SeparateDatabaseAndState(
            # For the database: We do NOTHING.
            # The database already has the correct intermediate tables.
            # We don't want to create new tables or alter existing ones.
            database_operations=[],
        
            # For Django's project state (its "history book"):
            # We record all the changes that `makemigrations` detected.
            # This tells Django that from this point forward, it should use
            # the explicit `through` models to manage these M2M relationships.
            state_operations=[
                migrations.CreateModel(
                    name='ProposalAssessorGroupMember',
                    fields=[
                        ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('emailuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                        ('proposalassessorgroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.proposalassessorgroup')),
                    ],
                    options={
                        'db_table': 'disturbance_proposalassessorgroup_members',
                        'unique_together': {('proposalassessorgroup', 'emailuser')},
                    },
                ),
                migrations.CreateModel(
                    name='ProposalApproverGroupMember',
                    fields=[
                        ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('emailuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                        ('proposalapprovergroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.proposalapprovergroup')),
                    ],
                    options={
                        'db_table': 'disturbance_proposalapprovergroup_members',
                        'unique_together': {('proposalapprovergroup', 'emailuser')},
                    },
                ),
                migrations.CreateModel(
                    name='OrganisationAccessGroupMember',
                    fields=[
                        ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('emailuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                        ('organisationaccessgroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.organisationaccessgroup')),
                    ],
                    options={
                        'db_table': 'disturbance_organisationaccessgroup_members',
                        'unique_together': {('organisationaccessgroup', 'emailuser')},
                    },
                ),
                migrations.CreateModel(
                    name='ApiaryReferralGroupMember',
                    fields=[
                        ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('apiaryreferralgroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.apiaryreferralgroup')),
                        ('emailuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                    ],
                    options={
                        'db_table': 'disturbance_apiaryreferralgroup_members',
                        'unique_together': {('apiaryreferralgroup', 'emailuser')},
                    },
                ),
                migrations.CreateModel(
                    name='ApiaryOrganisationAccessGroupMember',
                    fields=[
                        ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('apiaryorganisationaccessgroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.apiaryorganisationaccessgroup')),
                        ('emailuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                    ],
                    options={
                        'db_table': 'disturbance_apiaryorganisationaccessgroup_members',
                        'unique_together': {('apiaryorganisationaccessgroup', 'emailuser')},
                    },
                ),
                migrations.CreateModel(
                    name='ApiaryAssessorGroupMember',
                    fields=[
                        ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('apiaryassessorgroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.apiaryassessorgroup')),
                        ('emailuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                    ],
                    options={
                        'db_table': 'disturbance_apiaryassessorgroup_members',
                        'unique_together': {('apiaryassessorgroup', 'emailuser')},
                    },
                ),
                migrations.CreateModel(
                    name='ApiaryApproverGroupMember',
                    fields=[
                        ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('apiaryapprovergroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.apiaryapprovergroup')),
                        ('emailuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                    ],
                    options={
                        'db_table': 'disturbance_apiaryapprovergroup_members',
                        'unique_together': {('apiaryapprovergroup', 'emailuser')},
                    },
                ),
                migrations.AlterField(
                    model_name='apiaryapprovergroup',
                    name='members',
                    field=models.ManyToManyField(through='disturbance.ApiaryApproverGroupMember', to=settings.AUTH_USER_MODEL),
                ),
                migrations.AlterField(
                    model_name='apiaryassessorgroup',
                    name='members',
                    field=models.ManyToManyField(through='disturbance.ApiaryAssessorGroupMember', to=settings.AUTH_USER_MODEL),
                ),
                migrations.AlterField(
                    model_name='apiaryorganisationaccessgroup',
                    name='members',
                    field=models.ManyToManyField(through='disturbance.ApiaryOrganisationAccessGroupMember', to=settings.AUTH_USER_MODEL),
                ),
                migrations.AlterField(
                    model_name='apiaryreferralgroup',
                    name='members',
                    field=models.ManyToManyField(through='disturbance.ApiaryReferralGroupMember', to=settings.AUTH_USER_MODEL),
                ),
                migrations.AlterField(
                    model_name='organisationaccessgroup',
                    name='members',
                    field=models.ManyToManyField(through='disturbance.OrganisationAccessGroupMember', to=settings.AUTH_USER_MODEL),
                ),
                migrations.AlterField(
                    model_name='proposalapprovergroup',
                    name='members',
                    field=models.ManyToManyField(through='disturbance.ProposalApproverGroupMember', to=settings.AUTH_USER_MODEL),
                ),
                migrations.AlterField(
                    model_name='proposalassessorgroup',
                    name='members',
                    field=models.ManyToManyField(through='disturbance.ProposalAssessorGroupMember', to=settings.AUTH_USER_MODEL),
                ),
            ]
        )
    ]
